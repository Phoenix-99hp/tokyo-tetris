{"version":3,"sources":["components/Layout/LayoutStyle.js","components/Layout/Layout.jsx","helpers/index.js","initialState/index.js","reducer/index.js","components/Grid/GridStyle.js","components/GridItem/GridItemStyle.js","components/GridItem/GridItem.jsx","components/Grid/Grid.jsx","pages/Game.js","App.js","theme/globalStyle.js","index.js","theme/theme.js"],"names":["StyledPageContainer","styled","div","theme","colors","background","StyledMainContent","main","breakpoints","small","StyledHeader","header","blue","white","extraSmall","unsupported","minWidth","StyledPageInner","footer","Layout","children","determineShape","Math","floor","random","num","color","determineOrientation","determineStartingCoordinates","shape","orientation","direction","shouldUpdateCoordinatesOnRotate","sortedNewCoordinates","squares","filter","coordinate","toString","endsWith","newCoordinate","length","includes","generated","currentRow","i","parseInt","charAt","slice","push","edge","row","generateSquares","nextShape","nextOrientation","nextDirection","initialState","activeShape","activeOrientation","activeCoordinates","shouldGenerateNewShape","keyPressed","activeKeyCode","score","toast","showToast","rowsToReset","coordinates","nextSquares","total","colored","paused","commifiedScore","supported","initial","togglePlayAgain","showControls","countdown","useButtons","useKeys","useTouch","breakCountdown","gameOver","endGame","finalScore","startPauseText","reducer","state","action","type","coordinateRow","RTR","forEach","filtered","square","RTRcheck","toastValue","scoreValue","value","split","skip","reverse","map","splice","replace","commifyScore","console","log","payload","arr","indexOf","rowToReset","showCountdown","countdownInProgress","overlapping","firstOverlappingRow","adjustment","overlappingCoordinates","coordinatesToDisplay","newSquares","newSlideCoordinates","manualCoordinates","rightCoordinates","leftCoordinates","index","sort","a","b","shouldUpdateToNewCoordinates","StyledOuter","keyframes","StyledInner","gameBorder","StyledGridContainer","squareSizes","large","gridBorder","medium","totalHeight","last","StyledNextShapeContainer","hideAtSmallBP","css","StyledNextShape","controls","border","show","StyledNextShapeGrid","grid","top","bottom","left","right","rows","cols","StyledButtonContainer","mediumSmall","StyledKeysStartPauseContainer","StyledToast","StyledToastValue","span","green","StyledScoreValueContainer","StyledScoreValue","StyledSideColumn","StyledMessageContainer","red","StyledGameOver","h2","StyledFinalScoreHeading","StyledControlsInner","StyledMoveRotateContainer","purple","StyledChangeControls","StyledButtonControlGroup","StyledDownContainer","StyledLeftRightContainer","StyledStartPauseButton","button","StyledControlsButton","StyledShowHideControlsButton","StyledControlsButtonWrapper","StyledGridSquare","GridItem","Grid","useReducer","dispatch","isMounted","useRef","useTheme","keydownHandler","useCallback","e","preventDefault","stopImmediatePropagation","keyCode","repeat","keyupHandler","keyupHandlerTouchButtons","touchStartHandler","touchArea","setInterval","longTouchHandler","clearInterval","touchEndHandler","checkIfSupported","window","innerWidth","innerHeight","minHeight","pauseHandler","stopPropagation","toggleShowControls","clearToast","switchControlsHandler","switchTo","removeEventListener","addEventListener","useEffect","current","setTimeout","clearTimeout","onClick","onTouchStart","onTouchEnd","Game","App","GlobalStyle","createGlobalStyle","ReactDOM","render","orange","document","getElementById"],"mappings":"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","file":"static/js/main.d06bcb34.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledPageContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  min-height: 100vh;\n  height: 100%;\n  text-align: center;\n  width: 100vw;\n  background-color: ${({ theme }) => theme.colors.background};\n  align-items: center;\n  box-sizing: border-box;\n  user-select: none;\n`;\n\nexport const StyledMainContent = styled.main`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  // position: relative;\n  justify-content: center;\n  color: white;\n  flex: 1 1 100%;\n  align-content: start;\n  padding-bottom: 20px;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.small}) {\n    flex-wrap: wrap;\n  }\n`;\n\nexport const StyledHeader = styled.header`\n  display: flex;\n  height: fit-content;\n  flex: 0 1 70px;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  color: white;\n  padding: 20px 0;\n  font-size: 45px;\n  // text-shadow: 1px 1px 1px blue;\n  box-sizing: border-box;\n  flex-wrap: wrap;\n  color: ${({ theme }) => theme.colors.blue};\n\n  > span {\n    border-bottom: 3px solid ${({ theme }) => theme.colors.white};\n    font-family: GeoramaSemiBoldItalic;\n    text-shadow: 1px 1px 1px blue;\n  }\n\n  // > p {\n  //   margin-top: 10px;\n  //   font-size: 8px;\n  //   color: ${({ theme }) => theme.colors.white};\n  //   flex: 1 1 100%;\n  // }\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.small}) {\n    padding: 20px 0;\n  }\n\n  @media screen and (max-width: ${({ theme }) =>\n      theme.breakpoints.extraSmall}) {\n    font-size: 30px;\n    padding: 10px 0;\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.unsupported.minWidth}) {\n    // font-size: 30px;\n\n    > span {\n      border-bottom: none;\n    }\n  } ;\n`;\n\nexport const StyledFooter = styled.footer`\n  display: flex;\n  height: 40px;\n  // flex: 0 1 40px;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  box-sizing: border-box;\n  font-size: 10px;\n  color: ${({ theme }) => theme.colors.white};\n`;\n\nexport const StyledPageInner = styled.div`\n  max-width: 1200px;\n  width: 100%;\n`;\n","import React from \"react\";\nimport {\n  StyledPageContainer,\n  StyledPageInner,\n  StyledMainContent,\n  StyledHeader,\n  StyledFooter\n} from \"./LayoutStyle\";\n\nconst Layout = ({ children }) => {\n  return (\n    <StyledPageContainer>\n      <StyledPageInner>\n        <StyledHeader>\n          <span>Tokyo Tetris</span>\n        </StyledHeader>\n        <StyledMainContent>{children}</StyledMainContent>\n      </StyledPageInner>\n    </StyledPageContainer>\n  );\n};\n\nexport default Layout;\n","export const generateSquares = () => {\n  const generated = [];\n  let currentRow = 0;\n  for (let i = 0; i < 200; i++) {\n    i % 10 === 0 && i < 100\n      ? (currentRow = parseInt(i.toString().charAt(0)))\n      : i % 10 === 0 && i > 99\n      ? (currentRow = parseInt(i.toString().slice(0, 2)))\n      : currentRow;\n    if (i.toString().endsWith(\"0\")) {\n      generated.push({\n        edge: \"left\",\n        row: currentRow,\n        coordinate: null\n      });\n    } else if (i.toString().endsWith(\"9\")) {\n      generated.push({\n        edge: \"right\",\n        row: currentRow,\n        coordinate: null\n      });\n    } else {\n      generated.push({ row: currentRow, coordinate: null });\n    }\n  }\n  return generated;\n};\n\nexport const determineShape = () => {\n  const shapeNumber = Math.floor(Math.random() * 5);\n  switch (shapeNumber) {\n    case 0:\n      return { num: 0, color: \"blue\" };\n    case 1:\n      return { num: 1, color: \"red\" };\n    case 2:\n      return { num: 2, color: \"purple\" };\n    case 3:\n      return { num: 3, color: \"orange\" };\n    case 4:\n      return { num: 4, color: \"green\" };\n  }\n};\n\nexport const determineOrientation = () => {\n  return Math.floor(Math.random() * 4);\n};\n\nexport const determineStartingCoordinates = (shape, orientation, direction) => {\n  if (shape === 0) {\n    // square\n    return [4, 5, 14, 15];\n  } else if (shape === 1) {\n    // line\n    if (orientation === 0 || orientation === 2) {\n      return [3, 4, 5, 6];\n    } else {\n      return [4, 14, 24, 34];\n    }\n  } else if (shape === 2) {\n    // L\n    if (direction === 0) {\n      if (orientation === 0) {\n        return [3, 4, 5, 15];\n      } else if (orientation === 1) {\n        return [4, 14, 23, 24];\n      } else if (orientation === 2) {\n        return [3, 13, 14, 15];\n      } else if (orientation === 3) {\n        return [4, 5, 14, 24];\n      }\n    } else {\n      if (orientation === 0) {\n        return [5, 13, 14, 15];\n      } else if (orientation === 1) {\n        return [4, 14, 24, 25];\n      } else if (orientation === 2) {\n        return [3, 4, 5, 13];\n      } else if (orientation === 3) {\n        return [4, 5, 15, 25];\n      }\n    }\n  } else if (shape === 3) {\n    // Z\n    if (direction === 0) {\n      if (orientation === 0 || orientation === 2) {\n        return [4, 5, 13, 14];\n      } else if (orientation === 1 || orientation === 3) {\n        return [4, 14, 15, 25];\n      }\n    } else {\n      if (orientation === 0 || orientation === 2) {\n        return [3, 4, 14, 15];\n      } else if (orientation === 1 || orientation === 3) {\n        return [5, 14, 15, 24];\n      }\n    }\n  } else if (shape === 4) {\n    //camel\n    if (orientation === 0) {\n      return [3, 4, 5, 14];\n    } else if (orientation === 1) {\n      return [4, 13, 14, 24];\n    } else if (orientation === 2) {\n      return [4, 13, 14, 15];\n    } else {\n      return [4, 14, 15, 24];\n    }\n  }\n};\n\nexport const commifyScore = value => {\n  const score = value.toString().split(\"\");\n  let skip = [];\n  const mapped = score.reverse().map((num, i) => {\n    if (score.length >= 4 && i > 2 && i < score.length && !skip[0]) {\n      skip = [i + 1, i + 2];\n      return `${num}comma`;\n    } else if (skip[0]) {\n      skip.splice(0, 1);\n      return num;\n    } else {\n      return num;\n    }\n  });\n  return mapped.reverse().toString().replace(/,/g, \"\").replace(/comma/g, \",\");\n};\n\nexport const shouldUpdateCoordinatesOnRotate = (\n  sortedNewCoordinates,\n  squares\n) => {\n  if (\n    !sortedNewCoordinates.filter(\n      coordinate =>\n        coordinate.toString().endsWith(\"9\") &&\n        sortedNewCoordinates.filter(newCoordinate =>\n          newCoordinate.toString().endsWith(\"0\")\n        ).length >= 1\n    )[0] &&\n    !squares.filter(({ coordinate }) =>\n      sortedNewCoordinates.includes(coordinate)\n    )[0]\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n","import {\n  determineShape,\n  determineOrientation,\n  determineStartingCoordinates,\n  generateSquares\n} from \"../helpers\";\n\nconst generated = generateSquares();\nconst nextShape = determineShape();\nconst nextOrientation = determineOrientation();\nconst nextDirection =\n  nextShape.num === 2 || nextShape.num === 3\n    ? Math.floor(Math.random() * 2)\n    : null;\nconst nextCoordinates = determineStartingCoordinates(\n  nextShape.num,\n  nextOrientation,\n  nextDirection\n);\n\nconst initialState = {\n  activeShape: { num: null, color: null },\n  activeOrientation: null,\n  activeCoordinates: null,\n  shouldGenerateNewShape: false,\n  squares: generated,\n  keyPressed: false,\n  activeKeyCode: null,\n  direction: null,\n  score: 0,\n  toast: null,\n  showToast: false,\n  rowsToReset: null,\n  nextShape: {\n    shape: nextShape,\n    orientation: nextOrientation,\n    coordinates: nextCoordinates,\n    direction: nextDirection\n  },\n  nextSquares: {\n    total: [],\n    colored: []\n  },\n  paused: true,\n  commifiedScore: 0,\n  supported: true,\n  initial: true,\n  togglePlayAgain: false,\n  showControls: true,\n  countdown: null,\n  useButtons: false,\n  useKeys: true,\n  useTouch: false,\n  breakCountdown: false,\n  gameOver: false,\n  endGame: false,\n  finalScore: 0,\n  startPauseText: null\n};\n\nexport default initialState;\n","import {\n  determineShape,\n  determineOrientation,\n  determineStartingCoordinates,\n  commifyScore,\n  shouldUpdateCoordinatesOnRotate\n} from \"../helpers\";\nimport initialState from \"../initialState\";\nimport { nextShape } from \"../data\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"CHECK_FOR_FULL_ROWS\":\n      const coordinateRow = [];\n      const RTR = [];\n      state.activeCoordinates.forEach(coordinate => {\n        const filtered = state.squares.filter(\n          square =>\n            square.coordinate && state.squares[coordinate].row == square.row\n        );\n        if (filtered[9] && !coordinateRow.includes(filtered[9].row)) {\n          coordinateRow.push(filtered[9].row);\n          RTR.push(filtered);\n        }\n      });\n      const RTRcheck = RTR[0] ? RTR : null;\n      const toastValue = RTR[0] ? 1000 * RTR.length + 100 : 100;\n      const scoreValue = state.score + toastValue;\n      const commifiedScore = commifyScore(scoreValue);\n      return {\n        ...state,\n        rowsToReset: RTRcheck,\n        score: scoreValue,\n        commifiedScore: commifiedScore,\n        toast: toastValue\n      };\n    case \"TOGGLE_SHOW_CONTROLS\":\n      return {\n        ...state,\n        showControls: !state.showControls\n      };\n    case \"USE_BUTTONS\":\n      console.log(\"USE_BUTTONS REDUCER\");\n      return {\n        ...state,\n        useButtons: true,\n        useKeys: false,\n        useTouch: false\n      };\n    case \"USE_KEYS\":\n      return {\n        ...state,\n        useButtons: false,\n        useKeys: true,\n        useTouch: false\n      };\n    case \"USE_TOUCH\":\n      return {\n        ...state,\n        useButtons: false,\n        useKeys: false,\n        useTouch: true\n      };\n    case \"SUPPORTED\":\n      return {\n        ...state,\n        supported: action.payload.supported,\n        paused: action.payload.paused ? action.payload.paused : state.paused\n      };\n    case \"START_PAUSE_TEXT\":\n      return {\n        ...state,\n        startPauseText: action.payload\n      };\n    case \"RESET_STATE\":\n      return {\n        ...initialState,\n        togglePlayAgain: !state.togglePlayAgain\n      };\n    case \"RESET_ROWS\":\n      if (state.rowsToReset) {\n        state.rowsToReset.forEach(arr => {\n          arr.forEach(square => {\n            if (state.squares.includes(square)) {\n              state.squares.splice(state.squares.indexOf(square), 1, {\n                ...square,\n                color: \"red\",\n                coordinate: null\n              });\n            }\n          });\n        });\n        state.rowsToReset.forEach(rowToReset => {\n          for (let i = 199; i > 0; i--) {\n            if (state.squares[i].row < rowToReset[0].row) {\n              state.squares.splice(i + 10, 1, {\n                ...state.squares[i],\n                row: state.squares[i].row + 1,\n                coordinate: state.squares[i].coordinate\n                  ? state.squares[i].coordinate + 10\n                  : null\n              });\n            }\n          }\n        });\n      }\n    case \"SET_TOAST\":\n      return {\n        ...state,\n        showToast: true\n      };\n    case \"SET_COUNTDOWN\":\n      return {\n        ...state,\n        showCountdown: true,\n        countdown: 3,\n        breakCountdown: false,\n        initial: false\n      };\n    case \"HIDE_COUNTDOWN\":\n      return {\n        ...state,\n        countdown: null,\n        showCountdown: false,\n        countdownInProgress: false\n      };\n    case \"HIDE_TOAST\":\n      return {\n        ...state,\n        showToast: false\n      };\n    case \"PAUSE\":\n      return {\n        ...state,\n        paused: true,\n        countdown: null,\n        showCountdown: false,\n        breakCountdown: true\n      };\n    case \"BREAK_COUNTDOWN\":\n      return {\n        ...state,\n        countdown: null,\n        showCountdown: false,\n        breakCountdown: true,\n        paused: true\n      };\n    case \"COUNTDOWN\":\n      return {\n        ...state,\n        countdown: state.countdown - 1 !== 0 ? state.countdown - 1 : \"START\"\n      };\n    case \"GAME_OVER\":\n      return {\n        ...state,\n        gameOver: true,\n        keyPressed: false\n        // endGame: true\n      };\n    case \"END_GAME\":\n      return {\n        ...state,\n        // gameOver: true\n        keyPressed: false,\n        endGame: true\n      };\n    case \"START\":\n      return {\n        ...state,\n        paused: false,\n        initial: false\n      };\n    // }\n    case \"SET_ACTIVE_KEYCODE\":\n    case \"SET_TOUCH_ACTIVE\":\n      return {\n        ...state,\n        activeKeyCode: action.payload\n      };\n    case \"SET_ACTIVE_SHAPE\":\n      // console.log(state.commifiedScore, \"commified at set_Active_shape\");\n      if (state.endGame) {\n        return {\n          ...state,\n          gameOver: true,\n          shouldGenerateNewShape: false,\n          nextShape: null,\n          // commifiedScore: commifyScore(state.score),\n          // gameOver: true,\n          // endGame: true,\n          keyPressed: false\n        };\n      } else if (state.nextShape) {\n        const overlapping = state.squares.filter(\n          ({ coordinate }) =>\n            coordinate && state.nextShape.coordinates.includes(coordinate)\n        );\n        console.log(overlapping, \"OVERLAPPING\");\n        // const rowZeroOverlap = state.squares.filter(\n        //   ({ coordinate, row }) =>\n        //     coordinate &&\n        //     state.nextShape.coordinates.includes(coordinate) &&\n        //     row === 0\n        // );\n        const firstOverlappingRow = overlapping[0] ? overlapping[0].row : null;\n        const lastOverlappingRow = overlapping[overlapping.length - 1];\n        console.log(\"FIRST OVERLAP ROW\", firstOverlappingRow);\n        if (firstOverlappingRow === 0) {\n          console.log(\"FIRST OVERLAP = 0\");\n          return {\n            ...state,\n            // gameOver: true,\n            shouldGenerateNewShape: false,\n            nextShape: null,\n            // commifiedScore: commifyScore(state.score),\n            gameOver: true,\n            // endGame: true,\n            keyPressed: false\n          };\n        } else if (overlapping[0]) {\n          let adjustment = null;\n          if (\n            overlapping[overlapping.length - 1].row == firstOverlappingRow &&\n            overlapping.length >= 2\n          ) {\n            overlapping.splice(0, 1);\n            adjustment = overlapping.map(coordinate => coordinate - 10);\n          }\n          console.log(\"ADJUSTMENT\", adjustment);\n          const overlappingCoordinates = adjustment\n            ? adjustment\n            : overlapping.map(({ coordinate }) => coordinate);\n          const coordinatesToDisplay = state.nextShape.coordinates.filter(\n            coordinate =>\n              coordinate < 10 ||\n              (parseInt(coordinate.toString().slice(0, 1)) <\n                firstOverlappingRow &&\n                !overlappingCoordinates.includes(coordinate))\n          );\n          console.log(\"CTD\", coordinatesToDisplay);\n          return {\n            ...state,\n            activeShape: state.nextShape.shape,\n            activeOrientation: state.nextShape.orientation,\n            activeCoordinates: coordinatesToDisplay,\n            direction: state.nextShape.direction,\n            shouldGenerateNewShape: false,\n            rowsToReset: null,\n            endGame: true,\n            nextShape: null,\n            shouldGenerateNewShape: false\n          };\n        } else if (state.nextShape.shape.color) {\n          const shape = determineShape();\n          const orientation = determineOrientation();\n          const direction =\n            shape.num === 2 || shape.num === 3\n              ? Math.floor(Math.random() * 2)\n              : null;\n          const coordinates = determineStartingCoordinates(\n            shape.num,\n            orientation,\n            direction\n          );\n          return {\n            ...state,\n            activeShape: state.nextShape.shape,\n            activeOrientation: state.nextShape.orientation,\n            activeCoordinates: state.nextShape.coordinates,\n            direction: state.nextShape.direction,\n            shouldGenerateNewShape: false,\n            rowsToReset: null,\n            nextShape: {\n              shape: shape,\n              orientation: orientation,\n              coordinates: coordinates,\n              direction: direction\n            }\n          };\n        } else {\n          console.log(\"NO NEXT\");\n          return {\n            ...state,\n            gameOver: true,\n            keyPressed: false,\n            shouldGenerateNewShape: false\n          };\n        }\n      }\n    case \"UPDATE_NEXT_SQUARES\":\n      const newSquares = [];\n      for (let i = 0; i < action.payload; i++) {\n        newSquares.push(i);\n      }\n      return {\n        ...state,\n        nextSquares: {\n          total: newSquares,\n          colored: state.nextShape\n            ? nextShape[state.nextShape.coordinates.toString()].colored\n            : \"\"\n        }\n      };\n    case \"SLIDE_COORDINATES\":\n      // console.log(\"SLIDE\");\n      if (state.endGame) {\n        console.log(\"END GAME\");\n        return {\n          ...state,\n          gameOver: true\n        };\n        // return {\n        //   keyPressed: false,\n        //   shouldGenerateNewShape: false\n        // };\n        // return {\n        //   ...state,\n        //   keyPressed: false,\n        //   shouldGenerateNewShape: false,\n        //   gameOver: true\n        // };\n      } else if (\n        !state.activeCoordinates.filter(\n          coordinate =>\n            coordinate > 189 || state.squares[coordinate + 10].coordinate\n        )[0]\n      ) {\n        const newSlideCoordinates = state.activeCoordinates.map(\n          coordinate => coordinate + 10\n        );\n        return {\n          ...state,\n          keyPressed: false,\n          activeCoordinates: newSlideCoordinates\n        };\n      } else {\n        return {\n          ...state,\n          squares: state.squares.map((square, i) =>\n            state.activeCoordinates.includes(i)\n              ? {\n                  ...square,\n                  coordinate: i,\n                  color: state.activeShape.color\n                }\n              : { ...square }\n          ),\n          shouldGenerateNewShape: true,\n          keyPressed: false\n        };\n      }\n    case \"TRIGGER_MANUAL_DOWN\":\n      if (state.paused) {\n        return {\n          ...state\n        };\n      } else if (\n        !state.activeCoordinates.filter(\n          coordinate =>\n            coordinate > 189 || state.squares[coordinate + 10].coordinate\n        )[0]\n      ) {\n        const manualCoordinates = state.activeCoordinates.map(\n          coordinate => coordinate + 10\n        );\n        return {\n          ...state,\n          activeKeyCode: null,\n          keyPressed: true,\n          activeCoordinates: manualCoordinates\n        };\n      } else {\n        return {\n          ...state,\n          squares: state.squares.map((square, i) =>\n            state.activeCoordinates.includes(i)\n              ? {\n                  ...square,\n                  coordinate: i,\n                  color: state.activeShape.color\n                }\n              : { ...square }\n          ),\n          activeKeyCode: null,\n          shouldGenerateNewShape: true,\n          keyPressed: true\n        };\n      }\n    case \"TRIGGER_MANUAL_RIGHT\":\n      if (state.paused) {\n        return {\n          ...state\n        };\n      } else if (\n        state.activeCoordinates.filter(coordinate => coordinate > 189)[0]\n      ) {\n        return {\n          ...state,\n          squares: state.squares.map((square, i) =>\n            state.activeCoordinates.includes(i)\n              ? {\n                  ...square,\n                  coordinate: i,\n                  color: state.activeShape.color\n                }\n              : { ...square }\n          ),\n          shouldGenerateNewShape: true,\n          keyPressed: true,\n          activeKeyCode: null\n        };\n      } else if (\n        !state.activeCoordinates.filter(\n          coordinate =>\n            state.squares[coordinate + 1].coordinate ||\n            state.squares[coordinate].edge === \"right\"\n        )[0]\n      ) {\n        const rightCoordinates = state.activeCoordinates.map(\n          coordinate => coordinate + 1\n        );\n        return {\n          ...state,\n          keyPressed: true,\n          activeCoordinates: rightCoordinates,\n          activeKeyCode: null\n        };\n      } else {\n        return {\n          ...state,\n          keyPressed: true,\n          activeKeyCode: null\n        };\n      }\n    case \"TRIGGER_MANUAL_LEFT\":\n      if (state.paused) {\n        return {\n          ...state,\n          activeKeyCode: null\n        };\n      } else if (\n        state.activeCoordinates.filter(coordinate => coordinate > 189)[0]\n      ) {\n        return {\n          ...state,\n          squares: state.squares.map((square, i) =>\n            state.activeCoordinates.includes(i)\n              ? {\n                  ...square,\n                  coordinate: i,\n                  color: state.activeShape.color\n                }\n              : { ...square }\n          ),\n          shouldGenerateNewShape: true,\n          keyPressed: true,\n          activeKeyCode: null\n        };\n      } else if (\n        !state.activeCoordinates.filter(\n          coordinate =>\n            state.squares[coordinate - 1].coordinate ||\n            state.squares[coordinate].edge === \"left\"\n        )[0]\n      ) {\n        const leftCoordinates = state.activeCoordinates.map(\n          coordinate => coordinate - 1\n        );\n        return {\n          ...state,\n          keyPressed: true,\n          activeCoordinates: leftCoordinates,\n          activeKeyCode: null\n        };\n      } else {\n        return {\n          ...state,\n          keyPressed: true,\n          activeKeyCode: null\n        };\n      }\n    case \"TRIGGER_MANUAL_ROTATE\":\n      if (state.paused) {\n        return {\n          ...state\n        };\n      } else if (\n        state.activeCoordinates.filter(coordinate => coordinate > 189)[0]\n      ) {\n        return {\n          ...state,\n          squares: state.squares.map((square, i) =>\n            state.activeCoordinates.includes(i)\n              ? {\n                  ...square,\n                  coordinate: i,\n                  color: state.activeShape.color\n                }\n              : { ...square }\n          ),\n          shouldGenerateNewShape: true,\n          keyPressed: true,\n          activeKeyCode: null\n        };\n      } else if (state.activeShape.num === 1) {\n        if (state.activeOrientation === 0 || state.activeOrientation === 2) {\n          let sortedNewCoordinates = state.activeCoordinates\n            .map((coordinate, index) => {\n              if (index === 0) {\n                return coordinate - 9;\n              } else if (index === 1) {\n                return coordinate;\n              } else if (index === 2) {\n                return coordinate + 9;\n              } else if (index === 3) {\n                return coordinate + 18;\n              }\n            })\n            .sort((a, b) => a - b);\n          let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n            sortedNewCoordinates,\n            state.squares\n          );\n          // console.log(shouldUpdateToNewCoordinates);\n          // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n          //   coordinate =>\n          //     coordinate.toString().endsWith(\"9\") &&\n          //     sortedNewCoordinates.filter(newCoordinate =>\n          //       newCoordinate.toString().endsWith(\"0\")\n          //     ).length >= 1\n          // )[0]\n          //   ? true\n          //   : false;\n          return {\n            ...state,\n            keyPressed: true,\n            activeKeyCode: null,\n            activeOrientation: shouldUpdateToNewCoordinates ? 1 : 0,\n            activeCoordinates: shouldUpdateToNewCoordinates\n              ? sortedNewCoordinates\n              : state.activeCoordinates\n          };\n        } else {\n          let sortedNewCoordinates = state.activeCoordinates\n            .map((coordinate, index) => {\n              if (index === 0) {\n                return coordinate + 9;\n              } else if (index === 1) {\n                return coordinate;\n              } else if (index === 2) {\n                return coordinate - 9;\n              } else if (index === 3) {\n                return coordinate - 18;\n              }\n            })\n            .sort((a, b) => a - b);\n          let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n            sortedNewCoordinates,\n            state.squares\n          );\n          // console.log(shouldUpdateToNewCoordinates);\n          // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n          //   coordinate =>\n          //     coordinate.toString().endsWith(\"9\") &&\n          //     sortedNewCoordinates.filter(newCoordinate =>\n          //       newCoordinate.toString().endsWith(\"0\")\n          //     ).length >= 1\n          // )[0]\n          //   ? true\n          //   : false;\n          return {\n            ...state,\n            activeKeyCode: null,\n            keyPressed: true,\n            activeOrientation: shouldUpdateToNewCoordinates ? 0 : 1,\n            activeCoordinates: shouldUpdateToNewCoordinates\n              ? sortedNewCoordinates\n              : state.activeCoordinates\n          };\n        }\n      } else if (state.activeShape.num === 2) {\n        if (state.direction === 0) {\n          if (state.activeOrientation === 0) {\n            let sortedNewCoordinates = state.activeCoordinates\n              .map((coordinate, index) => {\n                if (index === 0) {\n                  return coordinate - 9;\n                } else if (index === 1) {\n                  return coordinate;\n                } else if (index === 2) {\n                  return coordinate + 9;\n                } else if (index === 3) {\n                  return coordinate - 2;\n                }\n              })\n              .sort((a, b) => a - b);\n            let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n              sortedNewCoordinates,\n              state.squares\n            );\n            // console.log(shouldUpdateToNewCoordinates);\n            // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n            //   coordinate =>\n            //     coordinate.toString().endsWith(\"9\") &&\n            //     sortedNewCoordinates.filter(newCoordinate =>\n            //       newCoordinate.toString().endsWith(\"0\")\n            //     ).length >= 1\n            // )[0]\n            //   ? true\n            //   : false;\n            return {\n              ...state,\n              keyPressed: true,\n              activeKeyCode: null,\n              activeOrientation: shouldUpdateToNewCoordinates ? 1 : 0,\n              activeCoordinates: shouldUpdateToNewCoordinates\n                ? sortedNewCoordinates\n                : state.activeCoordinates\n            };\n          } else if (state.activeOrientation === 1) {\n            let sortedNewCoordinates = state.activeCoordinates\n              .map((coordinate, index) => {\n                if (index === 0) {\n                  return coordinate + 11;\n                } else if (index === 1) {\n                  return coordinate;\n                } else if (index === 2) {\n                  return coordinate - 20;\n                } else if (index === 3) {\n                  return coordinate - 11;\n                }\n              })\n              .sort((a, b) => a - b);\n            let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n              sortedNewCoordinates,\n              state.squares\n            );\n            // console.log(shouldUpdateToNewCoordinates);\n            // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n            //   coordinate =>\n            //     coordinate.toString().endsWith(\"9\") &&\n            //     sortedNewCoordinates.filter(newCoordinate =>\n            //       newCoordinate.toString().endsWith(\"0\")\n            //     ).length >= 1\n            // )[0]\n            //   ? true\n            //   : false;\n            return {\n              ...state,\n              keyPressed: true,\n              activeKeyCode: null,\n              activeOrientation: shouldUpdateToNewCoordinates ? 2 : 1,\n              activeCoordinates: shouldUpdateToNewCoordinates\n                ? sortedNewCoordinates\n                : state.activeCoordinates\n            };\n          } else if (state.activeOrientation === 2) {\n            let sortedNewCoordinates = state.activeCoordinates\n              .map((coordinate, index) => {\n                if (index === 0) {\n                  return coordinate + 2;\n                } else if (index === 1) {\n                  return coordinate - 9;\n                } else if (index === 2) {\n                  return coordinate;\n                } else if (index === 3) {\n                  return coordinate + 9;\n                }\n              })\n              .sort((a, b) => a - b);\n            let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n              sortedNewCoordinates,\n              state.squares\n            );\n            // console.log(shouldUpdateToNewCoordinates);\n            // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n            //   coordinate =>\n            //     coordinate.toString().endsWith(\"9\") &&\n            //     sortedNewCoordinates.filter(newCoordinate =>\n            //       newCoordinate.toString().endsWith(\"0\")\n            //     ).length >= 1\n            // )[0]\n            //   ? true\n            //   : false;\n            return {\n              ...state,\n              keyPressed: true,\n              activeKeyCode: null,\n              activeOrientation: shouldUpdateToNewCoordinates ? 3 : 2,\n              activeCoordinates: shouldUpdateToNewCoordinates\n                ? sortedNewCoordinates\n                : state.activeCoordinates\n            };\n          } else if (state.activeOrientation === 3) {\n            let sortedNewCoordinates = state.activeCoordinates\n              .map((coordinate, index) => {\n                if (index === 0) {\n                  return coordinate + 11;\n                } else if (index === 1) {\n                  return coordinate + 20;\n                } else if (index === 2) {\n                  return coordinate;\n                } else if (index === 3) {\n                  return coordinate - 11;\n                }\n              })\n              .sort((a, b) => a - b);\n            let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n              sortedNewCoordinates,\n              state.squares\n            );\n            // console.log(shouldUpdateToNewCoordinates);\n            // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n            //   coordinate =>\n            //     coordinate.toString().endsWith(\"9\") &&\n            //     sortedNewCoordinates.filter(newCoordinate =>\n            //       newCoordinate.toString().endsWith(\"0\")\n            //     ).length >= 1\n            // )[0]\n            //   ? true\n            //   : false;\n            return {\n              ...state,\n              keyPressed: true,\n              activeKeyCode: null,\n              activeOrientation: shouldUpdateToNewCoordinates ? 0 : 3,\n              activeCoordinates: shouldUpdateToNewCoordinates\n                ? sortedNewCoordinates\n                : state.activeCoordinates\n            };\n          }\n        } else {\n          if (state.activeOrientation === 0) {\n            let sortedNewCoordinates = state.activeCoordinates\n              .map((coordinate, index) => {\n                if (index === 0) {\n                  return coordinate + 20;\n                } else if (index === 1) {\n                  return coordinate - 9;\n                } else if (index === 2) {\n                  return coordinate;\n                } else if (index === 3) {\n                  return coordinate + 9;\n                }\n              })\n              .sort((a, b) => a - b);\n            let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n              sortedNewCoordinates,\n              state.squares\n            );\n            // console.log(shouldUpdateToNewCoordinates);\n            // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n            //   coordinate =>\n            //     coordinate.toString().endsWith(\"9\") &&\n            //     sortedNewCoordinates.filter(newCoordinate =>\n            //       newCoordinate.toString().endsWith(\"0\")\n            //     ).length >= 1\n            // )[0]\n            //   ? true\n            //   : false;\n            return {\n              ...state,\n              keyPressed: true,\n              activeKeyCode: null,\n              activeOrientation: shouldUpdateToNewCoordinates ? 1 : 0,\n              activeCoordinates: shouldUpdateToNewCoordinates\n                ? sortedNewCoordinates\n                : state.activeCoordinates\n            };\n          } else if (state.activeOrientation === 1) {\n            let sortedNewCoordinates = state.activeCoordinates\n              .map((coordinate, index) => {\n                if (index === 0) {\n                  return coordinate + 11;\n                } else if (index === 1) {\n                  return coordinate;\n                } else if (index === 2) {\n                  return coordinate - 11;\n                } else if (index === 3) {\n                  return coordinate - 2;\n                }\n              })\n              .sort((a, b) => a - b);\n            let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n              sortedNewCoordinates,\n              state.squares\n            );\n            // console.log(shouldUpdateToNewCoordinates);\n            // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n            //   coordinate =>\n            //     coordinate.toString().endsWith(\"9\") &&\n            //     sortedNewCoordinates.filter(newCoordinate =>\n            //       newCoordinate.toString().endsWith(\"0\")\n            //     ).length >= 1\n            // )[0]\n            //   ? true\n            //   : false;\n            return {\n              ...state,\n              keyPressed: true,\n              activeKeyCode: null,\n              activeOrientation: shouldUpdateToNewCoordinates ? 2 : 1,\n              activeCoordinates: shouldUpdateToNewCoordinates\n                ? sortedNewCoordinates\n                : state.activeCoordinates\n            };\n          } else if (state.activeOrientation === 2) {\n            let sortedNewCoordinates = state.activeCoordinates\n              .map((coordinate, index) => {\n                if (index === 0) {\n                  return coordinate - 9;\n                } else if (index === 1) {\n                  return coordinate;\n                } else if (index === 2) {\n                  return coordinate + 9;\n                } else if (index === 3) {\n                  return coordinate - 20;\n                }\n              })\n              .sort((a, b) => a - b);\n            let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n              sortedNewCoordinates,\n              state.squares\n            );\n            // console.log(shouldUpdateToNewCoordinates);\n            // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n            //   coordinate =>\n            //     coordinate.toString().endsWith(\"9\") &&\n            //     sortedNewCoordinates.filter(newCoordinate =>\n            //       newCoordinate.toString().endsWith(\"0\")\n            //     ).length >= 1\n            // )[0]\n            //   ? true\n            //   : false;\n            return {\n              ...state,\n              keyPressed: true,\n              activeKeyCode: null,\n              activeOrientation: shouldUpdateToNewCoordinates ? 3 : 2,\n              activeCoordinates: shouldUpdateToNewCoordinates\n                ? sortedNewCoordinates\n                : state.activeCoordinates\n            };\n          } else if (state.activeOrientation === 3) {\n            let sortedNewCoordinates = state.activeCoordinates\n              .map((coordinate, index) => {\n                if (index === 0) {\n                  return coordinate + 2;\n                } else if (index === 1) {\n                  return coordinate + 11;\n                } else if (index === 2) {\n                  return coordinate;\n                } else if (index === 3) {\n                  return coordinate - 11;\n                }\n              })\n              .sort((a, b) => a - b);\n            let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n              sortedNewCoordinates,\n              state.squares\n            );\n            // console.log(shouldUpdateToNewCoordinates);\n            // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n            //   coordinate =>\n            //     coordinate.toString().endsWith(\"9\") &&\n            //     sortedNewCoordinates.filter(newCoordinate =>\n            //       newCoordinate.toString().endsWith(\"0\")\n            //     ).length >= 1\n            // )[0]\n            //   ? true\n            //   : false;\n            return {\n              ...state,\n              keyPressed: true,\n              activeKeyCode: null,\n              activeOrientation: shouldUpdateToNewCoordinates ? 0 : 3,\n              activeCoordinates: shouldUpdateToNewCoordinates\n                ? sortedNewCoordinates\n                : state.activeCoordinates\n            };\n          }\n        }\n      } else if (state.activeShape.num === 3) {\n        if (state.direction === 0) {\n          if (state.activeOrientation === 0 || state.activeOrientation === 2) {\n            let sortedNewCoordinates = state.activeCoordinates\n              .map((coordinate, index) => {\n                if (index === 0) {\n                  return coordinate;\n                } else if (index === 1) {\n                  return coordinate + 20;\n                } else if (index === 2) {\n                  return coordinate + 2;\n                } else if (index === 3) {\n                  return coordinate;\n                }\n              })\n              .sort((a, b) => a - b);\n            let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n              sortedNewCoordinates,\n              state.squares\n            );\n            // console.log(shouldUpdateToNewCoordinates);\n            // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n            //   coordinate =>\n            //     coordinate.toString().endsWith(\"9\") &&\n            //     sortedNewCoordinates.filter(newCoordinate =>\n            //       newCoordinate.toString().endsWith(\"0\")\n            //     ).length >= 1\n            // )[0]\n            //   ? true\n            //   : false;\n            return {\n              ...state,\n              keyPressed: true,\n              activeKeyCode: null,\n              activeOrientation: shouldUpdateToNewCoordinates ? 1 : 0,\n              activeCoordinates: shouldUpdateToNewCoordinates\n                ? sortedNewCoordinates\n                : state.activeCoordinates\n            };\n          } else if (\n            state.activeOrientation === 1 ||\n            state.activeOrientation === 3\n          ) {\n            let sortedNewCoordinates = state.activeCoordinates\n              .map((coordinate, index) => {\n                if (index === 0) {\n                  return coordinate;\n                } else if (index === 1) {\n                  return coordinate;\n                } else if (index === 2) {\n                  return coordinate - 10;\n                } else if (index === 3) {\n                  return coordinate - 12;\n                }\n              })\n              .sort((a, b) => a - b);\n            let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n              sortedNewCoordinates,\n              state.squares\n            );\n            // console.log(shouldUpdateToNewCoordinates);\n            // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n            //   coordinate =>\n            //     coordinate.toString().endsWith(\"9\") &&\n            //     sortedNewCoordinates.filter(newCoordinate =>\n            //       newCoordinate.toString().endsWith(\"0\")\n            //     ).length >= 1\n            // )[0]\n            //   ? true\n            //   : false;\n            return {\n              ...state,\n              keyPressed: true,\n              activeKeyCode: null,\n              activeOrientation: shouldUpdateToNewCoordinates ? 0 : 1,\n              activeCoordinates: shouldUpdateToNewCoordinates\n                ? sortedNewCoordinates\n                : state.activeCoordinates\n            };\n          }\n        } else {\n          if (state.activeOrientation === 0 || state.activeOrientation === 2) {\n            let sortedNewCoordinates = state.activeCoordinates\n              .map((coordinate, index) => {\n                if (index === 0) {\n                  return coordinate + 21;\n                } else if (index === 1) {\n                  return coordinate + 1;\n                } else if (index === 2) {\n                  return coordinate;\n                } else if (index === 3) {\n                  return coordinate;\n                }\n              })\n              .sort((a, b) => a - b);\n            let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n              sortedNewCoordinates,\n              state.squares\n            );\n            // console.log(shouldUpdateToNewCoordinates);\n            // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n            //   coordinate =>\n            //     coordinate.toString().endsWith(\"9\") &&\n            //     sortedNewCoordinates.filter(newCoordinate =>\n            //       newCoordinate.toString().endsWith(\"0\")\n            //     ).length >= 1\n            // )[0]\n            //   ? true\n            //   : false;\n            return {\n              ...state,\n              keyPressed: true,\n              activeKeyCode: null,\n              activeOrientation: shouldUpdateToNewCoordinates ? 1 : 0,\n              activeCoordinates: shouldUpdateToNewCoordinates\n                ? sortedNewCoordinates\n                : state.activeCoordinates\n            };\n          } else if (\n            state.activeOrientation === 1 ||\n            state.activeOrientation === 3\n          ) {\n            let sortedNewCoordinates = state.activeCoordinates\n              .map((coordinate, index) => {\n                if (index === 0) {\n                  return coordinate - 2;\n                } else if (index === 1) {\n                  return coordinate;\n                } else if (index === 2) {\n                  return coordinate;\n                } else if (index === 3) {\n                  return coordinate - 20;\n                }\n              })\n              .sort((a, b) => a - b);\n            let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n              sortedNewCoordinates,\n              state.squares\n            );\n            // console.log(shouldUpdateToNewCoordinates);\n            // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n            //   coordinate =>\n            //     coordinate.toString().endsWith(\"9\") &&\n            //     sortedNewCoordinates.filter(newCoordinate =>\n            //       newCoordinate.toString().endsWith(\"0\")\n            //     ).length >= 1\n            // )[0]\n            //   ? true\n            //   : false;\n            return {\n              ...state,\n              keyPressed: true,\n              activeKeyCode: null,\n              activeOrientation: shouldUpdateToNewCoordinates ? 0 : 1,\n              activeCoordinates: shouldUpdateToNewCoordinates\n                ? sortedNewCoordinates\n                : state.activeCoordinates\n            };\n          }\n        }\n      } else if (state.activeShape.num === 4) {\n        if (state.activeOrientation === 0) {\n          let sortedNewCoordinates = state.activeCoordinates\n            .map((coordinate, index) => {\n              if (index === 0) {\n                return coordinate;\n              } else if (index === 1) {\n                return coordinate;\n              } else if (index === 2) {\n                return coordinate - 11;\n              } else if (index === 3) {\n                return coordinate;\n              }\n            })\n            .sort((a, b) => a - b);\n          let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n            sortedNewCoordinates,\n            state.squares\n          );\n          // console.log(shouldUpdateToNewCoordinates);\n          // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n          //   coordinate =>\n          //     coordinate.toString().endsWith(\"9\") &&\n          //     sortedNewCoordinates.filter(newCoordinate =>\n          //       newCoordinate.toString().endsWith(\"0\")\n          //     ).length >= 1\n          // )[0]\n          //   ? true\n          //   : false;\n          return {\n            ...state,\n            keyPressed: true,\n            activeKeyCode: null,\n            activeOrientation: shouldUpdateToNewCoordinates ? 1 : 0,\n            activeCoordinates: shouldUpdateToNewCoordinates\n              ? sortedNewCoordinates\n              : state.activeCoordinates\n          };\n        } else if (state.activeOrientation === 1) {\n          let sortedNewCoordinates = state.activeCoordinates\n            .map((coordinate, index) => {\n              if (index === 0) {\n                return coordinate;\n              } else if (index === 1) {\n                return coordinate;\n              } else if (index === 2) {\n                return coordinate;\n              } else if (index === 3) {\n                return coordinate - 9;\n              }\n            })\n            .sort((a, b) => a - b);\n          let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n            sortedNewCoordinates,\n            state.squares\n          );\n          // console.log(shouldUpdateToNewCoordinates);\n          // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n          //   coordinate =>\n          //     coordinate.toString().endsWith(\"9\") &&\n          //     sortedNewCoordinates.filter(newCoordinate =>\n          //       newCoordinate.toString().endsWith(\"0\")\n          //     ).length >= 1\n          // )[0]\n          //   ? true\n          //   : false;\n          return {\n            ...state,\n            keyPressed: true,\n            activeKeyCode: null,\n            activeOrientation: shouldUpdateToNewCoordinates ? 2 : 1,\n            activeCoordinates: shouldUpdateToNewCoordinates\n              ? sortedNewCoordinates\n              : state.activeCoordinates\n          };\n        } else if (state.activeOrientation === 2) {\n          let sortedNewCoordinates = state.activeCoordinates\n            .map((coordinate, index) => {\n              if (index === 0) {\n                return coordinate;\n              } else if (index === 1) {\n                return coordinate + 11;\n              } else if (index === 2) {\n                return coordinate;\n              } else if (index === 3) {\n                return coordinate;\n              }\n            })\n            .sort((a, b) => a - b);\n          let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n            sortedNewCoordinates,\n            state.squares\n          );\n          // console.log(shouldUpdateToNewCoordinates);\n          // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n          //   coordinate =>\n          //     coordinate.toString().endsWith(\"9\") &&\n          //     sortedNewCoordinates.filter(newCoordinate =>\n          //       newCoordinate.toString().endsWith(\"0\")\n          //     ).length >= 1\n          // )[0]\n          //   ? true\n          //   : false;\n          return {\n            ...state,\n            keyPressed: true,\n            activeKeyCode: null,\n            activeOrientation: shouldUpdateToNewCoordinates ? 3 : 2,\n            activeCoordinates: shouldUpdateToNewCoordinates\n              ? sortedNewCoordinates\n              : state.activeCoordinates\n          };\n        } else if (state.activeOrientation === 3) {\n          let sortedNewCoordinates = state.activeCoordinates\n            .map((coordinate, index) => {\n              if (index === 0) {\n                return coordinate + 9;\n              } else if (index === 1) {\n                return coordinate;\n              } else if (index === 2) {\n                return coordinate;\n              } else if (index === 3) {\n                return coordinate;\n              }\n            })\n            .sort((a, b) => a - b);\n          let shouldUpdateToNewCoordinates = shouldUpdateCoordinatesOnRotate(\n            sortedNewCoordinates,\n            state.squares\n          );\n          // console.log(shouldUpdateToNewCoordinates);\n          // let shouldUpdateToNewCoordinates = !sortedNewCoordinates.filter(\n          //   coordinate =>\n          //     coordinate.toString().endsWith(\"9\") &&\n          //     sortedNewCoordinates.filter(newCoordinate =>\n          //       newCoordinate.toString().endsWith(\"0\")\n          //     ).length >= 1\n          // )[0]\n          //   ? true\n          //   : false;\n          return {\n            ...state,\n            keyPressed: true,\n            activeKeyCode: null,\n            activeOrientation: shouldUpdateToNewCoordinates ? 0 : 3,\n            activeCoordinates: shouldUpdateToNewCoordinates\n              ? sortedNewCoordinates\n              : state.activeCoordinates\n          };\n        }\n      } else {\n        return {\n          ...state,\n          keyPressed: true,\n          activeKeyCode: null\n        };\n      }\n    case \"KEYUP\":\n      // if (state.endGame) {\n      //   return {\n      //     ...state,\n      //     keyPressed: false,\n      //     gameOver: true\n      //   };\n      // } else {\n      return {\n        ...state,\n        keyPressed: false\n      };\n    // }\n    // } else {\n    //   return;\n    // }\n    case \"TOUCH_END\":\n      return {\n        ...state,\n        activeKeyCode: null\n      };\n    case \"KEYDOWN\":\n      // if (state.useKeys) {\n      return {\n        ...state,\n        keyPressed: true\n      };\n    // } else {\n    //   return;\n    // }\n    default:\n      return {\n        ...state\n      };\n  }\n};\n\nexport default reducer;\n","import styled, { keyframes, css } from \"styled-components\";\n\nconst flash = keyframes`\n  0% {\n    opacity: 0\n  }\n  50% {\n    opacity: 1\n  }\n  100% {\n   opacity: 0\n  }\n`;\n\nexport const StyledOuter = styled.div`\n  display: flex;\n  flex: 1 1 100%;\n  justify-content: center;\n  align-self: start;\n  height: fit-content;\n  padding: 10px;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.small}) {\n    order: 2;\n    padding-top: 5px;\n  }\n`;\n\nexport const StyledInner = styled.div`\n  border: 3px solid ${({ theme }) => theme.colors.gameBorder};\n  border-radius: 5px;\n  position: relative;\n`;\n\n// export const StyledDrawBorder = styled.div`\n//   height: ${({ theme }) => theme.squareSizes.small}px;\n//   width: ${({ theme }) => theme.squareSizes.small * 10}px;\n//   box-sizing: border-box;\n//   border: 2px solid red;\n//   position: absolute;\n//   top: 0;\n// `;\n\nexport const StyledGridContainer = styled.div`\n  display: grid;\n  box-sizing: border-box;\n  grid-template-rows: repeat(20, ${({ theme }) => theme.squareSizes.large}px);\n  grid-template-columns: repeat(\n    10,\n    ${({ theme }) => theme.squareSizes.large}px\n  );\n  border-top: 1px solid ${({ theme }) => theme.colors.gridBorder};\n  border-left: 1px solid ${({ theme }) => theme.colors.gridBorder};\n\n  @media screen and (max-height: 830px) {\n    grid-template-rows: repeat(\n      20,\n      ${({ theme }) => theme.squareSizes.medium}px\n    );\n    grid-template-columns: repeat(\n      10,\n      ${({ theme }) => theme.squareSizes.medium}px\n    );\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.small}),\n    screen and (max-height: ${({ theme }) => theme.totalHeight.medium}), {\n    grid-template-rows: repeat(20, ${({ theme }) => theme.squareSizes.small}px);\n    grid-template-columns: repeat(\n      10,\n      ${({ theme }) => theme.squareSizes.small}px\n    );\n  }\n\n  @media screen and (max-height: 630px), screen and (max-width: 660px) {\n    grid-template-rows: repeat(\n      20,\n      ${({ theme }) => theme.squareSizes.extraSmall}px\n    );\n    grid-template-columns: repeat(\n      10,\n      ${({ theme }) => theme.squareSizes.extraSmall}px\n    );\n  }\n\n  // @media screen and (max-height: ${({ theme }) =>\n    theme.totalHeight.medium}) {\n  //   grid-template-rows: repeat(20, ${({ theme }) =>\n    theme.squareSizes.small}px);\n  //   grid-template-columns: repeat(\n  //     10,\n  //     ${({ theme }) => theme.squareSizes.small}px\n  //   );\n  // }\n\n  @media screen and (max-height: ${({ theme }) =>\n      theme.totalHeight.extraSmall}),\n    screen and (max-width: ${({ theme }) => theme.breakpoints.extraSmall}) {\n    grid-template-rows: repeat(20, ${({ theme }) => theme.squareSizes.last}px);\n    grid-template-columns: repeat(\n      10,\n      ${({ theme }) => theme.squareSizes.last}px\n    );\n  }\n\n  // AND\n\n  @media screen and (max-width: ${({ theme }) =>\n      theme.breakpoints.small}) and (max-height: 720px) {\n    grid-template-rows: repeat(20, ${({ theme }) => theme.squareSizes.last}px);\n    grid-template-columns: repeat(\n      10,\n      ${({ theme }) => theme.squareSizes.last}px\n    );\n  }\n`;\n\nexport const StyledNextShapeContainer = styled.div`\n  display: flex;\n  max-width: 300px;\n  width: 100%;\n  justify-content: center;\n  align-self: flex-start;\n  flex-wrap: wrap;\n  align-items: center;\n  box-sizing: border-box;\n\n  > span {\n    display: flex;\n    flex: 1 1 100%;\n    // height: 40px;\n    align-items: center;\n    justify-content: center;\n    padding-bottom: 10px;\n  }\n\n  ${({ hideAtSmallBP }) =>\n    hideAtSmallBP === true &&\n    css`\n      display: flex;\n\n      @media screen and (max-width: ${({ theme }) => theme.breakpoints.small}) {\n        display: none;\n      }\n    `}\n\n  ${({ hideAtSmallBP }) =>\n    hideAtSmallBP === \"reveal\" &&\n    css`\n      display: none;\n\n      @media screen and (max-width: ${({ theme }) => theme.breakpoints.small}) {\n        display: flex;\n        max-width: 100%;\n        justify-content: between;\n        flex: 1 1 100%;\n        order: 3;\n        align-items: center;\n\n        > div {\n          :nth-of-type(1) {\n            order: 2;\n          }\n        }\n      }\n\n      @media screen and (max-width: ${({ theme }) =>\n          theme.breakpoints.extraSmall}) {\n        display: block;\n        > div {\n          margin: 20px auto auto auto;\n          :nth-of-type(1) {\n            width: 130px;\n          }\n          :nth-of-type(2) {\n            order: 5;\n            margin-top: 0;\n          }\n        }\n      }\n    `}\n`;\n\nexport const StyledNextShape = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  max-width: 200px;\n  align-items: center;\n  margin-top: 20px;\n  height: ${({ controls }) => (controls ? \"fit-content\" : \"130px\")};\n  // height: fit-content;\n  // width: fit-content;\n  // width: 200px;\n  width: 150px;\n  box-sizing: content-box;\n  height: 140px;\n  ${({ border }) =>\n    border &&\n    css`\n      border: 3px solid ${({ theme }) => theme.colors.white};\n    `}\n  // border: 3px solid ${({ theme }) => theme.colors.white};\n  border-radius: 5px;\n  padding: 10px;\n  visibility: ${({ show }) => (show ? \"visible\" : \"hidden\")};\n\n  // &:nth-of-type(2) {\n  //   height: fit-content;\n  // }\n\n  // > p {\n  //   width: 100%;\n  // }\n\n  // > span {\n  //   wi\n  // }\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.small}) {\n    display: ${({ show }) => (show ? \"flex\" : \"none\")};\n  }\n`;\n\nexport const StyledNextShapeGrid = styled.div`\n  display: grid;\n  ${({ border }) =>\n    border &&\n    css`\n      border-top: ${({ theme }) =>\n        border.grid.top ? `1px solid ${theme.colors.gridBorder}` : \"none\"};\n      border-bottom: ${({ theme }) =>\n        border.grid.bottom ? `1px solid ${theme.colors.gridBorder}` : \"none\"};\n      border-left: ${({ theme }) =>\n        border.grid.left ? `1px solid ${theme.colors.gridBorder}` : \"none\"};\n      border-right: ${({ theme }) =>\n        border.grid.right ? `1px solid ${theme.colors.gridBorder}` : \"none\"};\n    `}\n  ${({ color }) =>\n    color &&\n    css`\n      grid-template-rows: repeat(\n        ${({ rows }) => rows},\n        ${({ theme }) => theme.squareSizes.large}px\n      );\n      grid-template-columns: repeat(\n        ${({ cols }) => cols},\n        ${({ theme }) => theme.squareSizes.large}px\n      );\n    `};\n\n  @media screen and (max-height: 830px) {\n    grid-template-rows: repeat(\n      ${({ rows }) => rows},\n      ${({ theme }) => theme.squareSizes.medium}px\n    );\n    grid-template-columns: repeat(\n      ${({ cols }) => cols},\n      ${({ theme }) => theme.squareSizes.medium}px\n    );\n  }\n    \n  @media screen and (max-height: ${({ theme }) => theme.totalHeight.medium}) {\n    ${({ color }) =>\n      color &&\n      css`\n        grid-template-rows: repeat(\n          ${({ rows }) => rows},\n          ${({ theme }) => theme.squareSizes.small}px\n        );\n        grid-template-columns: repeat(\n          ${({ cols }) => cols},\n          ${({ theme }) => theme.squareSizes.small}px\n        );\n      `};\n  }\n\n  @media screen and (max-height: 630px), {\n    ${({ color }) =>\n      color &&\n      css`\n        grid-template-rows: repeat(\n          ${({ rows }) => rows},\n          ${({ theme }) => theme.squareSizes.extraSmall}px\n        );\n        grid-template-columns: repeat(\n          ${({ cols }) => cols},\n          ${({ theme }) => theme.squareSizes.extraSmall}px\n        );\n      `};\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.extraSmall}),\n    screen and (max-height: ${({ theme }) => theme.totalHeight.extraSmall}), {\n    ${({ color }) =>\n      color &&\n      css`\n        grid-template-rows: repeat(\n          ${({ rows }) => rows},\n          ${({ theme }) => theme.squareSizes.last}px\n        );\n        grid-template-columns: repeat(\n          ${({ cols }) => cols},\n          ${({ theme }) => theme.squareSizes.last}px\n        );\n      `};\n  }\n`;\n\nexport const StyledScoreContainer = styled.div`\n  display: flex;\n  max-width: 300px;\n  justify-content: center;\n  align-self: flex-start;\n  flex-wrap: wrap;\n  align-items: center;\n  box-sizing: border-box;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.medium}) {\n    max-width: 200px;\n    flex: 1 1 100%;\n  }\n\n  @media screen and (max-width: ${({ theme }) =>\n      theme.breakpoints.mediumSmall}) {\n    max-width: 180px;\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.last}) {\n    order: 1;\n  }\n`;\n\nexport const StyledButtonContainer = styled.div`\n  display: flex;\n  flex: 1 1 100%;\n  // width: fit-content;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  // padding-top: 10px;\n\n  > button {\n    height: 25px;\n    max-width: 156px;\n    cursor: pointer;\n      border: 1px solid ${({ theme }) => theme.colors.white};\n      flex: 1 1 100%;\n      padding: 5px;\n    height: 28px;\n\n    }\n  }\n`;\n\nexport const StyledKeysStartPauseContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  box-sizing: content-box;\n  // width: 130px;\n  max-width: 156px;\n  width: 100%;\n  justify-content: center;\n  // border: 3px solid ${({ theme }) => theme.colors.white};\n  // border-radius: 5px;\n  padding: 40px 0 10px;\n\n  > button {\n    :nth-of-type(1) {\n      border: 1px solid ${({ theme }) => theme.colors.white};\n      // border-radius: 1px;\n      flex: 1 1 100%;\n      padding: 5px;\n    }\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.small}) {\n    padding-top: 0;\n    padding-bottom: 0;\n    margin-top: 20px;\n  }\n`;\n\nexport const StyledScore = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  // height: 150px;\n  width: 200px;\n  // border: 3px solid ${({ theme }) => theme.colors.white};\n  border-radius: 5px;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.medium}) {\n    width: 100px;\n    // height: 120px;\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.small}) {\n    display: none;\n  }\n`;\n\nexport const StyledCountdown = styled.div`\n  display: flex;\n  flex: 1 1 100%;\n  padding: 20px 0;\n`;\n\nexport const StyledToast = styled.div`\n  display: flex;\n  flex: 1 1 100%;\n  padding: 20px 0;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.small}) {\n    padding: 0;\n  }\n`;\n\nexport const StyledToastValue = styled.span`\n  opacity: ${({ show }) => (show ? \"1\" : \"0\")};\n  font-size: 20px;\n  display: flex;\n  flex: 1 1 100%;\n  align-items: center;\n  justify-content: center;\n  color: ${({ theme }) => theme.colors.green};\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.small}) {\n    font-size: 18px;\n  }\n`;\n\nexport const StyledScoreValueContainer = styled.div`\n  display: flex;\n  // max-width: 300px;\n  flex: 1 1 100%;\n  align-items: center;\n  justify-content: center;\n  // height: 40px;\n  position: relative;\n  font-size: 20px;\n\n  > h2 {\n    position: relative;\n  }\n\n  // @media screen and (max-width: ${({ theme }) => theme.breakpoints.medium}) {\n  //   max-width: 200px;\n  // }\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.medium}) {\n    height: fit-content;\n    max-width: 200px;\n  }\n\n  @media screen and (max-width: ${({ theme }) =>\n      theme.breakpoints.mediumSmall}) {\n    max-width: 180px;\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.small}) {\n    padding-bottom: 5px;\n    > h2 {\n      font-size: 18px;\n    }\n    > span {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const StyledScoreValue = styled.span`\n  position: relative;\n  // font-size: 20px;\n  padding-left: 5px;\n  max-width: calc(300px - 70px);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: ${({ theme }) => theme.colors.green};\n\n  // @media screen and (max-width: ${({ theme }) => theme.breakpoints.medium}) {\n  //   font-size: 20px;\n  // }\n`;\n\n// export const StyledHeading = styled.h2`\n//   // font-weight: normal;\n//   // margin: 0;\n//   // font-size: 25px;\n// `;\n\nexport const StyledSideColumn = styled.div`\ndisplay: flex;\njustify-content: center;\nflex 1 1 100%;\nflex-wrap: wrap;\npadding: 10px;\nwhite-space: nowrap;\noverflow: hidden;\ntext-overflow: ellipsis;\nbox-sizing: border-box;\n\n@media screen and (max-width: ${({ theme }) => theme.breakpoints.small}){\n  padding: 0 10px;\n  :nth-of-type(1) {\n    display: none;\n  }\n  \n}`;\n\nexport const StyledMessageContainer = styled.div`\n  display: flex;\n  flex: 1 1 100%;\n  align-self: center;\n  // position: absolute;\n  // top: 50%;\n  // transform: translateY(calc(-50% - 150px));\n  justify-content: center;\n  align-items: center;\n  margin: 0 10px;\n  padding: 10px;\n  // height: 200px;\n  // height: 100%;\n  flex-wrap: wrap;\n  border: 2px solid ${({ theme }) => theme.colors.red};\n  border-radius: 5px;\n  max-width: 250px;\n  > p {\n    flex: 1 1 100%;\n    font-size: 12px;\n\n    &:first-of-type {\n      padding-bottom: 5px;\n    }\n  }\n`;\n\nexport const StyledGameOver = styled.h2`\n  padding-bottom: 15px;\n  color: ${({ theme }) => theme.colors.red};\n  font-size: 25px;\n  flex: 1 1 100%;\n`;\n\nexport const StyledFinalScoreHeading = styled.h2`\n  padding: 0 0 20px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const StyledControlsContainer = styled.div`\n  border: 1px solid red;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: start;\n  // flex: 1 1 100%;\n  // height: 150px;\n  // width: 200px;\n  // max-width: 300px;\n  // display: flex;\n  // align-items: center;\n  // justify-content: center;\n\n  > a {\n    font-size: 20px;\n    cursor: pointer;\n    height: fit-content;\n    // &:hover {\n    //   color: ${({ theme }) => theme.colors.blue};\n    // }\n  }\n\n  // @media screen and (max-width: ${({ theme }) => theme.breakpoints.medium}) {\n  //   max-width: 200px;\n  // }\n`;\n\nexport const StyledControlsInner = styled.div``;\n\nexport const StyledControlsHeading = styled.h2`\n  // &:hover {\n  //   color: ${({ theme }) => theme.colors.blue};\n  // }\n\n  > button {\n    width: 115px;\n  }\n`;\n\nexport const StyledMoveRotateContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex: 1 1 100%;\n  // padding: 5px;\n  flex-wrap: wrap;\n  width: fit-content;\n\n  &:first-of-type {\n    padding-bottom: 5px;\n  }\n\n  > span {\n    padding-left: 5px;\n    color: ${({ theme }) => theme.colors.purple};\n  }\n\n  // @media screen and (max-width: ${({ theme }) => theme.breakpoints.medium}) {\n  //   > span {\n  //     padding: 0;\n  //     margin: 0 auto;\n  //   }\n  // }\n`;\n\nexport const StyledButtonControls = styled.div`\n  border: 3px solid ${({ theme }) => theme.colors.white};\n`;\n\nexport const StyledChangeControls = styled.div`\n  font-size: 10px;\n  display: flex;\n  flex-wrap: wrap;\n  align-self: flex-end;\n  justify-content: center;\n\n  > span {\n    flex: 1 1 100%;\n    padding-bottom: 2px;\n  }\n\n  > button {\n    color: ${({ theme }) => theme.colors.blue};\n    background: none;\n    outline: none;\n    border: none;\n    font-size: 10px;\n    font-family: \"GeoramaLight\";\n    text-decoration: underline;\n    cursor: pointer;\n    // &:hover {\n    //   opacity: 0.7;\n    // }\n  }\n`;\n\nexport const StyledButtonControlGroup = styled.div`\n  // border: 1px solid red;\n  display: flex;\n  flex-wrap: wrap;\n\n\n  :nth-of-type(2) {\n    margin-top: 10px;\n    flex: 1 1 100%;\n  }\n\n    > button {\n      // font-size: 30px;\n      flex: 1 1 100%;\n      padding: 5px;\n      :last-of-type {\n        border: 1px solid ${({ theme }) => theme.colors.white};\n      }\n    }\n  }\n`;\n\nexport const StyledDownContainer = styled.div`\n  // border: 1px solid blue;\n  flex: 1 1 100%;\n\n  // > button {\n  //   font-size: 30px;\n  //   height: 30px;\n  //   width: 30px;\n  //   padding: 5px;\n  // }\n\n  > span {\n    cursor: pointer;\n    font-size: 30px;\n    height: 30px;\n    width: 30px;\n    padding: 5px;\n    box-sizing: border-box;\n  }\n\n  // display: flex;\n  // flex-wrap: wrap;\n`;\n\nexport const StyledLeftRightContainer = styled.div`\n  // border: 1px solid red;\n  display: flex;\n  flex: 1 1 100%;\n  justify-content: space-between;\n  cursor: pointer;\n\n  // > button {\n  //   // margin: 0 10px;\n  //   font-size: 30px;\n  //   height: 30px;\n  //   width: 30px;\n  //   padding: 5px;\n  // }\n\n  > span {\n    display: flex;\n    align-items: center;\n    font-size: 30px;\n    height: 30px;\n    width: 30px;\n    padding: 5px;\n    box-sizing: border-box;\n  }\n`;\n\nexport const StyledStartPauseButton = styled.button`\n  margin-bottom: 20px;\n\n  // &:hover {\n  //   background-color: ${({ theme }) => theme.colors.green};\n  // }\n`;\n\nexport const StyledButtonWrapper = styled.div`\n  border: 2px solid green;\n  padding: 2px;\n`;\n\nexport const StyledControlsButton = styled.button`\n  color: #2ac3de;\n  background: none;\n  outline: none;\n  padding: 0;\n  border: none;\n  font-size: 10px;\n  font-family: \"GeoramaLight\";\n  text-decoration: underline;\n\n  // &:hover {\n  //   opacity: 0.7;\n  // }\n`;\n\nexport const StyledShowHideControlsButton = styled.button`\n  border: 1px solid ${({ theme }) => theme.colors.white};\n  padding: 5px;\n  flex: 1 1 100%;\n`;\n\nexport const StyledControlsButtonWrapper = styled.div`\n  height: 28px;\n  display: flex;\n  flex: 1 1 100%;\n  justify-content: space-between;\n`;\n","import styled, { css } from \"styled-components\";\n\nexport const StyledGridSquare = styled.div`\n  box-sizing: border-box;\n  background-color: ${({ color }) => color};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.gridBorder};\n  border-right: 1px solid ${({ theme }) => theme.colors.gridBorder};\n  ${({ border }) =>\n    border &&\n    css`\n      border-top: ${({ border }) =>\n        border.squares.top ? border.squares.top : \"none\"};\n      border-left: ${({ border }) =>\n        border.squares.left ? border.squares.left : \"none\"};\n      border-right: ${({ border }) =>\n        border.squares.right ? border.squares.right : \"none\"};\n      border-bottom: ${({ border }) =>\n        border.squares.bottom ? border.squares.bottom : \"none\"};\n    `}\n`;\n","import React from \"react\";\nimport { StyledGridSquare } from \"./GridItemStyle\";\n\nconst GridItem = ({ color, border }) => (\n  <StyledGridSquare border={border} color={color} />\n);\n\nexport default GridItem;\n","import React, { useEffect, useRef, useReducer, useCallback } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport initialState from \"../../initialState\";\nimport { nextShape } from \"../../data\";\nimport reducer from \"../../reducer\";\nimport {\n  StyledNextShapeContainer,\n  StyledNextShape,\n  StyledNextShapeGrid,\n  StyledSideColumn,\n  StyledButtonContainer,\n  StyledKeysStartPauseContainer,\n  StyledScoreValueContainer,\n  StyledScoreValue,\n  StyledToast,\n  StyledToastValue,\n  StyledOuter,\n  StyledInner,\n  StyledGridContainer,\n  StyledMessageContainer,\n  StyledGameOver,\n  StyledFinalScoreHeading,\n  StyledMoveRotateContainer,\n  StyledControlsInner,\n  StyledButtonControlGroup,\n  StyledChangeControls,\n  StyledDownContainer,\n  StyledLeftRightContainer,\n  StyledStartPauseButton,\n  StyledControlsButton,\n  StyledShowHideControlsButton,\n  StyledControlsButtonWrapper\n} from \"./GridStyle\";\nimport GridItem from \"../GridItem/GridItem.jsx\";\n\nconst Grid = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const isMounted = useRef(false);\n  const theme = useTheme();\n\n  const keydownHandler = useCallback(e => {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    if (state.activeKeyCode) {\n      return;\n    } else {\n      dispatch({ type: \"SET_ACTIVE_KEYCODE\", payload: e.keyCode });\n      switch (e.keyCode) {\n        case 40: // arrowdown\n          return dispatch({ type: \"TRIGGER_MANUAL_DOWN\" });\n        case 39: // arrowright\n          return dispatch({ type: \"TRIGGER_MANUAL_RIGHT\" });\n        case 37: //arrowleft\n          return dispatch({ type: \"TRIGGER_MANUAL_LEFT\" });\n        case 32: // spacebar;\n          if (!e.repeat) {\n            return dispatch({ type: \"TRIGGER_MANUAL_ROTATE\" });\n          }\n      }\n    }\n  }, []);\n\n  const keyupHandler = useCallback(e => {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    if (state.activeKeyCode) {\n      dispatch({ type: \"KEYUP\" });\n    }\n  }, []);\n\n  const keyupHandlerTouchButtons = useCallback(e => {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }, []);\n\n  const touchStartHandler = (e, touchArea) => {\n    e.preventDefault();\n    if (state.useTouch) {\n      dispatch({ type: \"SET_TOUCH_ACTIVE\", payload: touchArea });\n      switch (touchArea) {\n        case 40: // arrowdown\n          dispatch({ type: \"TRIGGER_MANUAL_DOWN\" });\n          setInterval(longTouchHandler, 300);\n          break;\n        case 39: // arrowright\n          dispatch({ type: \"TRIGGER_MANUAL_RIGHT\" });\n          setInterval(longTouchHandler, 300);\n          break;\n        case 37: //arrowleft\n          dispatch({ type: \"TRIGGER_MANUAL_LEFT\" });\n          setInterval(longTouchHandler, 300);\n          break;\n      }\n    }\n  };\n\n  const longTouchHandler = () => {\n    switch (state.activeKeyCode) {\n      case 40: // arrowdown\n        return dispatch({ type: \"TRIGGER_MANUAL_DOWN\" });\n\n      case 39: // arrowright\n        return dispatch({ type: \"TRIGGER_MANUAL_RIGHT\" });\n\n      case 37: //arrowleft\n        return dispatch({ type: \"TRIGGER_MANUAL_LEFT\" });\n\n      default:\n        clearInterval(longTouchHandler);\n    }\n  };\n\n  const touchEndHandler = e => {\n    e.preventDefault();\n    if (state.useKeys || state.useButtons) {\n      return;\n    } else if (state.activeKeyCode) {\n      clearInterval(longTouchHandler);\n      dispatch({ type: \"TOUCH_END\" });\n    }\n  };\n\n  const checkIfSupported = () => {\n    if (\n      window.innerWidth >= theme.unsupported.minWidth &&\n      window.innerHeight >= theme.unsupported.minHeight\n    ) {\n      dispatch({\n        type: \"SUPPORTED\",\n        payload: { supported: true }\n      });\n    } else {\n      dispatch({\n        type: \"SUPPORTED\",\n        payload: { supported: false, paused: true }\n      });\n      dispatch({\n        type: \"START_PAUSE_TEXT\",\n        payload: \"Start\"\n      });\n    }\n  };\n\n  const pauseHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (state.startPauseText) {\n      dispatch({\n        type: \"START_PAUSE_TEXT\",\n        payload: null\n      });\n    }\n    if (state.paused && !state.countdown) {\n      dispatch({ type: \"SET_COUNTDOWN\" });\n    } else {\n      dispatch({ type: \"PAUSE\" });\n    }\n  };\n\n  const playAgainHandler = () => {\n    isMounted.current = false;\n    dispatch({ type: \"RESET_STATE\" });\n  };\n\n  const toggleShowControls = () => {\n    dispatch({ type: \"TOGGLE_SHOW_CONTROLS\" });\n  };\n\n  const clearToast = () => {\n    dispatch({ type: \"HIDE_TOAST\" });\n  };\n\n  const switchControlsHandler = (e, switchTo) => {\n    e.preventDefault();\n    if (switchTo === \"buttons\" && !state.useButtons) {\n      dispatch({ type: \"USE_BUTTONS\" });\n      window.removeEventListener(\"keydown\", keydownHandler);\n      window.removeEventListener(\"keyup\", keyupHandler);\n      window.addEventListener(\"keyup\", keyupHandlerTouchButtons);\n    } else if (switchTo === \"keys\" && !state.useKeys) {\n      dispatch({ type: \"USE_KEYS\" });\n      window.removeEventListener(\"keyup\", keyupHandlerTouchButtons);\n      window.addEventListener(\"keydown\", keydownHandler);\n      window.addEventListener(\"keyup\", keyupHandler);\n    } else if (switchTo === \"touch\" && !state.useTouch) {\n      dispatch({ type: \"USE_TOUCH\" });\n      window.removeEventListener(\"keydown\", keydownHandler);\n      window.removeEventListener(\"keyup\", keyupHandler);\n      window.addEventListener(\"keyup\", keyupHandlerTouchButtons);\n    }\n  };\n\n  useEffect(() => {\n    if (isMounted.current && state.breakCountdown) {\n      dispatch({ type: \"BREAK_COUNTDOWN\" });\n    } else if (\n      isMounted.current &&\n      state.countdown &&\n      state.countdown !== \"START\" &&\n      !state.breakCountdown\n    ) {\n      setTimeout(() => dispatch({ type: \"COUNTDOWN\" }), 500);\n    } else if (isMounted.current) {\n      setTimeout(() => dispatch({ type: \"HIDE_COUNTDOWN\" }), 500);\n      dispatch({ type: \"START\" });\n    }\n  }, [state.countdown]);\n\n  useEffect(() => {\n    checkIfSupported();\n    dispatch({ type: \"SET_ACTIVE_SHAPE\" });\n    window.addEventListener(\"keydown\", keydownHandler);\n    window.addEventListener(\"keyup\", keyupHandler);\n    window.addEventListener(\"resize\", checkIfSupported);\n  }, [state.togglePlayAgain]);\n\n  useEffect(() => {\n    if (state.gameOver) {\n      window.removeEventListener(\"keydown\", keydownHandler);\n      window.removeEventListener(\"keyup\", keyupHandler);\n    } else if (state.shouldGenerateNewShape) {\n      dispatch({ type: \"CHECK_FOR_FULL_ROWS\" });\n      dispatch({ type: \"SET_TOAST\" });\n      clearTimeout(clearToast);\n      setTimeout(clearToast, 300);\n      dispatch({ type: \"RESET_ROWS\" });\n      dispatch({ type: \"SET_ACTIVE_SHAPE\" });\n      console.log(\"SET_ACTVE\");\n    }\n  }, [state.shouldGenerateNewShape, state.gameOver]);\n\n  useEffect(() => {\n    if (state.nextShape) {\n      dispatch({\n        type: \"UPDATE_NEXT_SQUARES\",\n        payload:\n          nextShape[state.nextShape.coordinates.toString()].rows *\n          nextShape[state.nextShape.coordinates.toString()].cols\n      });\n    } else {\n      window.removeEventListener(\"keydown\", keydownHandler);\n      window.removeEventListener(\"keyup\", keyupHandler);\n      dispatch({ type: \"END_GAME\" });\n    }\n  }, [state.nextShape]);\n\n  useEffect(() => {\n    if (state.nextShape) {\n      if (!isMounted.current) {\n        isMounted.current = true;\n      } else if (state.keyPressed) {\n        console.log(\"KEYUP\");\n        dispatch({ type: \"KEYUP\" });\n      } else if (!state.paused) {\n        setTimeout(() => dispatch({ type: \"SLIDE_COORDINATES\" }), 300);\n      }\n    } else if (isMounted.current) {\n      dispatch({ type: \"END_GAME\" });\n      setTimeout(() => dispatch({ type: \"SLIDE_COORDINATES\" }), 300);\n    }\n  }, [state.activeCoordinates, state.paused]);\n\n  return (\n    <>\n      {state.supported && !state.gameOver ? (\n        <>\n          <StyledSideColumn>\n            <StyledNextShapeContainer hideAtSmallBP={true}>\n              <StyledScoreValueContainer>\n                <h2>Next Shape</h2>\n              </StyledScoreValueContainer>\n              <StyledNextShape show={true} border={true}>\n                <StyledNextShapeGrid\n                  color={state.nextShape ? state.nextShape.shape.color : \"\"}\n                  shape={state.nextShape ? state.nextShape.shape.num : \"\"}\n                  cols={\n                    state.nextShape\n                      ? nextShape[state.nextShape.coordinates.toString()].cols\n                      : \"\"\n                  }\n                  rows={\n                    state.nextShape\n                      ? nextShape[state.nextShape.coordinates.toString()].rows\n                      : \"\"\n                  }\n                >\n                  {state.nextSquares.total.map(square => (\n                    <GridItem\n                      border={\n                        state.nextShape\n                          ? nextShape[state.nextShape.coordinates.toString()]\n                              .border\n                          : \"\"\n                      }\n                      color={\n                        state.initial\n                          ? \"\"\n                          : state.nextShape &&\n                            state.nextSquares.colored &&\n                            state.nextSquares.colored.includes(square)\n                          ? theme.colors[state.nextShape.shape.color]\n                          : \"\"\n                      }\n                      key={square}\n                    />\n                  ))}\n                </StyledNextShapeGrid>\n              </StyledNextShape>\n            </StyledNextShapeContainer>\n          </StyledSideColumn>\n          <StyledOuter>\n            <StyledInner>\n              <StyledGridContainer>\n                {/* <StyledDrawBorder /> */}\n                {state.squares.map(({ coordinate, color, row }, index) => (\n                  <GridItem\n                    row={row}\n                    color={\n                      state.initial\n                        ? theme.colors.grid\n                        : coordinate\n                        ? theme.colors[color]\n                        : state.activeCoordinates &&\n                          state.activeCoordinates.includes(index)\n                        ? theme.colors[state.activeShape.color]\n                        : color\n                        ? color\n                        : theme.colors.grid\n                    }\n                    key={index}\n                  />\n                ))}\n              </StyledGridContainer>\n            </StyledInner>\n          </StyledOuter>\n          <StyledSideColumn>\n            <StyledNextShapeContainer hideAtSmallBP={false}>\n              <StyledScoreValueContainer>\n                <h2>Score:</h2>\n                <StyledScoreValue>{state.commifiedScore}</StyledScoreValue>\n              </StyledScoreValueContainer>\n              <StyledToast>\n                {state.showCountdown ? (\n                  <StyledToastValue show={state.showCountdown}>\n                    {state.countdown}\n                  </StyledToastValue>\n                ) : (\n                  <StyledToastValue show={state.showToast}>\n                    {`+ ${state.toast}`}\n                  </StyledToastValue>\n                )}\n              </StyledToast>\n            </StyledNextShapeContainer>\n            <StyledNextShapeContainer hideAtSmallBP={true}>\n              <StyledNextShape\n                show={state.showControls}\n                controls={true}\n                border={true}\n              >\n                {state.useButtons ? (\n                  <>\n                    <StyledButtonControlGroup>\n                      <StyledLeftRightContainer>\n                        <span\n                          onClick={() =>\n                            dispatch({ type: \"TRIGGER_MANUAL_LEFT\" })\n                          }\n                        >\n                          ←\n                        </span>\n                        <span\n                          onClick={() =>\n                            dispatch({ type: \"TRIGGER_MANUAL_RIGHT\" })\n                          }\n                        >\n                          →\n                        </span>\n                      </StyledLeftRightContainer>\n                      <StyledDownContainer>\n                        <span\n                          onClick={() =>\n                            dispatch({ type: \"TRIGGER_MANUAL_DOWN\" })\n                          }\n                        >\n                          ↓\n                        </span>\n                      </StyledDownContainer>\n                    </StyledButtonControlGroup>\n                    <StyledButtonControlGroup>\n                      <button\n                        onClick={() =>\n                          dispatch({ type: \"TRIGGER_MANUAL_ROTATE\" })\n                        }\n                      >\n                        Rotate\n                      </button>\n                    </StyledButtonControlGroup>\n                  </>\n                ) : state.useTouch ? (\n                  <>\n                    <StyledButtonControlGroup>\n                      <StyledLeftRightContainer>\n                        <span\n                          onTouchStart={e => touchStartHandler(e, 37)}\n                          onTouchEnd={e => touchEndHandler(e)}\n                        >\n                          ←\n                        </span>\n                        <span\n                          onTouchStart={e => touchStartHandler(e, 39)}\n                          onTouchEnd={e => touchEndHandler(e)}\n                        >\n                          →\n                        </span>\n                      </StyledLeftRightContainer>\n                      <StyledDownContainer>\n                        <span\n                          onTouchStart={e => touchStartHandler(e, 40)}\n                          onTouchEnd={e => touchEndHandler(e)}\n                        >\n                          ↓\n                        </span>\n                      </StyledDownContainer>\n                    </StyledButtonControlGroup>\n                    <StyledButtonControlGroup>\n                      <button\n                        onClick={() =>\n                          dispatch({ type: \"TRIGGER_MANUAL_ROTATE\" })\n                        }\n                      >\n                        Rotate\n                      </button>\n                    </StyledButtonControlGroup>\n                  </>\n                ) : (\n                  <>\n                    <StyledControlsInner>\n                      <StyledMoveRotateContainer>\n                        <h3>Move:</h3>\n                        <span>Arrow Keys</span>\n                      </StyledMoveRotateContainer>\n                      <StyledMoveRotateContainer>\n                        <h3>Rotate:</h3>\n                        <span>Spacebar</span>\n                      </StyledMoveRotateContainer>\n                    </StyledControlsInner>\n                    <StyledChangeControls>\n                      <span>On mobile, or no keyboard?</span>\n                      <button\n                        onClick={e => switchControlsHandler(e, \"buttons\")}\n                      >\n                        Use Buttons\n                      </button>\n                      <button onClick={e => switchControlsHandler(e, \"touch\")}>\n                        Use Touch\n                      </button>\n                    </StyledChangeControls>\n                  </>\n                )}\n              </StyledNextShape>\n              <StyledScoreValueContainer>\n                <StyledKeysStartPauseContainer>\n                  <StyledStartPauseButton onClick={e => pauseHandler(e)}>\n                    {state.startPauseText\n                      ? state.startPauseText\n                      : (!state.paused || !state.breakCountdown) &&\n                        !state.initial\n                      ? \"Pause\"\n                      : \"Start\"}\n                  </StyledStartPauseButton>\n                  {state.useButtons ? (\n                    <StyledControlsButtonWrapper>\n                      <StyledControlsButton\n                        onClick={e => switchControlsHandler(e, \"keys\")}\n                      >\n                        Use Keys\n                      </StyledControlsButton>\n                      <StyledControlsButton\n                        onClick={e => switchControlsHandler(e, \"touch\")}\n                      >\n                        Use Touch\n                      </StyledControlsButton>\n                    </StyledControlsButtonWrapper>\n                  ) : state.useTouch ? (\n                    <StyledControlsButtonWrapper>\n                      <StyledControlsButton\n                        onClick={e => switchControlsHandler(e, \"keys\")}\n                      >\n                        Use Keys\n                      </StyledControlsButton>\n                      <StyledControlsButton\n                        onClick={e => switchControlsHandler(e, \"buttons\")}\n                      >\n                        Use Buttons\n                      </StyledControlsButton>\n                    </StyledControlsButtonWrapper>\n                  ) : (\n                    <StyledShowHideControlsButton onClick={toggleShowControls}>\n                      {state.showControls ? \"Hide Controls\" : \"Show Controls\"}\n                    </StyledShowHideControlsButton>\n                  )}\n                </StyledKeysStartPauseContainer>\n              </StyledScoreValueContainer>\n            </StyledNextShapeContainer>\n          </StyledSideColumn>\n          <StyledNextShapeContainer hideAtSmallBP={\"reveal\"}>\n            <StyledNextShape\n              show={state.showControls}\n              controls={true}\n              border={true}\n            >\n              {state.useButtons ? (\n                <>\n                  <StyledButtonControlGroup>\n                    <StyledLeftRightContainer>\n                      <span\n                        onClick={() =>\n                          dispatch({ type: \"TRIGGER_MANUAL_LEFT\" })\n                        }\n                      >\n                        ←\n                      </span>\n                      <span\n                        onClick={() =>\n                          dispatch({ type: \"TRIGGER_MANUAL_RIGHT\" })\n                        }\n                      >\n                        →\n                      </span>\n                    </StyledLeftRightContainer>\n                    <StyledDownContainer>\n                      <span\n                        onClick={() =>\n                          dispatch({ type: \"TRIGGER_MANUAL_DOWN\" })\n                        }\n                      >\n                        ↓\n                      </span>\n                    </StyledDownContainer>\n                  </StyledButtonControlGroup>\n                  <StyledButtonControlGroup>\n                    <button\n                      onClick={() =>\n                        dispatch({ type: \"TRIGGER_MANUAL_ROTATE\" })\n                      }\n                    >\n                      Rotate\n                    </button>\n                  </StyledButtonControlGroup>\n                </>\n              ) : state.useTouch ? (\n                <>\n                  <StyledButtonControlGroup>\n                    <StyledLeftRightContainer>\n                      <span\n                        onTouchStart={e => touchStartHandler(e, 37)}\n                        onTouchEnd={e => touchEndHandler(e)}\n                      >\n                        ←\n                      </span>\n                      <span\n                        onTouchStart={e => touchStartHandler(e, 39)}\n                        onTouchEnd={e => touchEndHandler(e)}\n                      >\n                        →\n                      </span>\n                    </StyledLeftRightContainer>\n                    <StyledDownContainer>\n                      <span\n                        onTouchStart={e => touchStartHandler(e, 40)}\n                        onTouchEnd={e => touchEndHandler(e)}\n                      >\n                        ↓\n                      </span>\n                    </StyledDownContainer>\n                  </StyledButtonControlGroup>\n                  <StyledButtonControlGroup>\n                    <button\n                      onClick={() =>\n                        dispatch({ type: \"TRIGGER_MANUAL_ROTATE\" })\n                      }\n                    >\n                      Rotate\n                    </button>\n                  </StyledButtonControlGroup>\n                </>\n              ) : (\n                <>\n                  <StyledControlsInner>\n                    <StyledMoveRotateContainer>\n                      <h3>Move:</h3>\n                      <span>Arrow Keys</span>\n                    </StyledMoveRotateContainer>\n                    <StyledMoveRotateContainer>\n                      <h3>Rotate:</h3>\n                      <span>Spacebar</span>\n                    </StyledMoveRotateContainer>\n                  </StyledControlsInner>\n                  <StyledChangeControls>\n                    <span>On mobile, or no keyboard?</span>\n                    <button onClick={e => switchControlsHandler(e, \"buttons\")}>\n                      Use Buttons\n                    </button>\n                    <button onClick={e => switchControlsHandler(e, \"touch\")}>\n                      Use Touch\n                    </button>\n                  </StyledChangeControls>\n                </>\n              )}\n            </StyledNextShape>\n            <StyledScoreValueContainer>\n              <StyledKeysStartPauseContainer>\n                <StyledStartPauseButton onClick={e => pauseHandler(e)}>\n                  {state.startPauseText\n                    ? state.startPauseText\n                    : (!state.paused || !state.breakCountdown) && !state.initial\n                    ? \"Pause\"\n                    : \"Start\"}\n                </StyledStartPauseButton>\n                {state.useButtons ? (\n                  <StyledControlsButtonWrapper>\n                    <StyledControlsButton\n                      onClick={e => switchControlsHandler(e, \"keys\")}\n                    >\n                      Use Keys\n                    </StyledControlsButton>\n                    <StyledControlsButton\n                      onClick={e => switchControlsHandler(e, \"touch\")}\n                    >\n                      Use Touch\n                    </StyledControlsButton>\n                  </StyledControlsButtonWrapper>\n                ) : state.useTouch ? (\n                  <StyledControlsButtonWrapper>\n                    <StyledControlsButton\n                      onClick={e => switchControlsHandler(e, \"keys\")}\n                    >\n                      Use Keys\n                    </StyledControlsButton>\n                    <StyledControlsButton\n                      onClick={e => switchControlsHandler(e, \"buttons\")}\n                    >\n                      Use Buttons\n                    </StyledControlsButton>\n                  </StyledControlsButtonWrapper>\n                ) : (\n                  <StyledShowHideControlsButton onClick={toggleShowControls}>\n                    {state.showControls ? \"Hide Controls\" : \"Show Controls\"}\n                  </StyledShowHideControlsButton>\n                )}\n              </StyledKeysStartPauseContainer>\n            </StyledScoreValueContainer>\n          </StyledNextShapeContainer>\n        </>\n      ) : state.supported && state.gameOver ? (\n        <StyledMessageContainer>\n          {/* <StyledMessageInner> */}\n          <StyledGameOver>Game Over</StyledGameOver>\n          <StyledFinalScoreHeading>\n            Final Score:\n            <StyledScoreValue>{state.commifiedScore}</StyledScoreValue>\n          </StyledFinalScoreHeading>\n          <StyledButtonContainer>\n            <button onClick={playAgainHandler}>Play Again</button>\n          </StyledButtonContainer>\n          {/* </StyledMessageInner> */}\n        </StyledMessageContainer>\n      ) : !state.supported ? (\n        <StyledMessageContainer>\n          {/* <StyledMessageInner> */}\n          <StyledGameOver>Error</StyledGameOver>\n          <p>Game is not supported at current screen dimensions.</p>\n          <p>Increase dimensions, or use a larger device to play.</p>\n          {/* </StyledMessageInner> */}\n        </StyledMessageContainer>\n      ) : (\n        <StyledMessageContainer>\n          <StyledGameOver>Error</StyledGameOver>\n          <p>An unknown error occurred.</p>\n          {/* </StyledMessageInner> */}\n        </StyledMessageContainer>\n      )}\n    </>\n  );\n};\n\nexport default Grid;\n","import React from \"react\";\nimport Layout from \"../components/Layout/Layout.jsx\";\nimport Grid from \"../components/Grid/Grid.jsx\";\n\nconst Game = () => {\n  return (\n    <Layout>\n      <Grid />\n    </Layout>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\nimport Game from \"./pages/Game\";\n\nconst App = () => {\n  return <Game />;\n};\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\nhtml,\nbody {\n  max-height: 100vh;\n  max-width: 100vw;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  box-sizing: border-box;\n  overflow-x: hidden;\n  padding: 0;\n  font-family: GeoramaLight;\n  -webkit-tap-highlight-color: transparent;\n}\nbutton {\n  cursor: pointer;\n  font-family: GeoramaLightItalic;\n  // &:hover {\n  //   opacity: 0.7;\n  // }\n  &:focus {\n    outline: none;\n  }\n}\nh2 {\n  font-weight: normal;\n  margin: 0;\n  font-size: 20px;\n}\nh3 {\n   font-weight: normal;\n  margin: 0;\n  font-size: 16px;\n}\np {\n  margin: 0;\n}\nbutton {\n  background: none;\n  border: none;\n  border-radius: 3px;\n  color: white;\n  outline: none;\n}\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Theme from \"./theme/theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyle from \"./theme/globalStyle\";\nimport \"./theme/globalFonts.css\";\n\nReactDOM.render(\n  <ThemeProvider theme={Theme}>\n    <GlobalStyle />\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n","export default {\n  totalHeight: {\n    extraSmall: \"540px\",\n    small: \"650px\",\n    medium: \"750px\"\n  },\n  unsupported: {\n    minHeight: \"420\",\n    minWidth: \"190\"\n  },\n  colors: {\n    green: \"#9ece6a\",\n    red: \"#f7768e\",\n    blue: \"#2ac3de\",\n    purple: \"#bb9af7\",\n    orange: \"#e0af68\",\n    white: \"#c0caf5\",\n    background: \"#1a1b26\",\n    grid: \"#414868\",\n    gridBorder: \"#1a1b26\",\n    gameBorder: \"#ff9e64\"\n  },\n  breakpoints: {\n    last: \"253px\",\n    extraSmall: \"400px\",\n    small: \"720px\",\n    medium: \"1000px\",\n    large: \"1400px\"\n  },\n  squareSizes: {\n    last: \"15\",\n    extraSmall: \"20\",\n    small: \"25\",\n    medium: \"30\",\n    large: \"35\"\n  }\n};\n"],"sourceRoot":""}